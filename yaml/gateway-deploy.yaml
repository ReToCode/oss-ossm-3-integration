# based on OSSM 3.0 samples: https://raw.githubusercontent.com/maistra/istio-operator/maistra-3.0/chart/samples/ingress-gateway.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: knative-istio-ingressgateway
  namespace: knative-serving-ingress
spec:
  selector:
    matchLabels:
      knative: ingressgateway
  template:
    metadata:
      annotations:
        # Select the gateway injection template (rather than the default sidecar template)
        inject.istio.io/templates: gateway
      labels:
        # Set a unique label for the gateway. This is required to ensure Gateways can select this workload
        knative: ingressgateway
        # Enable gateway injection.
        # If connecting to a revisioned control plane, replace with "istio.io/rev: revision-name"
        # we have this, so we need to reference our revision instead of the generic "inject"
        # sidecar.istio.io/inject: "true"
        istio.io/rev: istio-system
    spec:
      containers:
        - name: istio-proxy
          image: auto # The image will automatically update each time the pod starts.

---
# Set up roles to allow reading credentials for TLS
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-ingressgateway-sds
  namespace: knative-serving-ingress
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-ingressgateway-sds
  namespace: knative-serving-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
  - kind: ServiceAccount
    name: default
---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: gatewayingress
#  namespace: knative-serving-ingress
#spec:
#  podSelector:
#    matchLabels:
#      knative: ingressgateway
#  ingress:
#    - {}
#  policyTypes:
#  - Ingress
